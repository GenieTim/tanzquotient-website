# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-04 09:58
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djangocms_text_ckeditor.fields


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0032_auto_20160603_1123'),
    ]

    operations = [
        migrations.AlterField(
            model_name='confirmation',
            name='date',
            field=models.DateField(auto_now_add=True, help_text='The date when the participation confirmation mail was sent to the subscriber.'),
        ),
        migrations.AlterField(
            model_name='course',
            name='active',
            field=models.BooleanField(default=True, help_text='Defines if clients can subscribe to this course (if checked, course is active if offering is active).'),
        ),
        migrations.AlterField(
            model_name='course',
            name='display',
            field=models.BooleanField(default=True, help_text='Defines if this course should be displayed on the Website (if checked, course is displayed if offering is displayed).'),
        ),
        migrations.AlterField(
            model_name='course',
            name='evaluated',
            field=models.BooleanField(default=False, help_text='If this course was evaluated by a survey or another way.'),
        ),
        migrations.AlterField(
            model_name='course',
            name='name',
            field=models.CharField(help_text='This name is just for reference and is not displayed anywhere on the website.', max_length=255),
        ),
        migrations.AlterField(
            model_name='course',
            name='open_class',
            field=models.BooleanField(default=False, help_text='Open classes do not require a subscription or subscription is done via a different channel.'),
        ),
        migrations.AlterField(
            model_name='course',
            name='period',
            field=models.ForeignKey(blank=True, help_text='You can set a custom period for this course here. If this is left empty, the period from the offering is taken.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.Period'),
        ),
        migrations.AlterField(
            model_name='course',
            name='position',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Position'),
        ),
        migrations.AlterField(
            model_name='course',
            name='special',
            field=djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Any special properties of this course.', null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='type',
            field=models.ForeignKey(help_text='The name of the course type is displayed on the website as the course title .', on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.CourseType'),
        ),
        migrations.AlterField(
            model_name='irregularlesson',
            name='room',
            field=models.ForeignKey(blank=True, help_text='The room for this lesson. If left empty, the course room is assumed.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='irregular_lessons', to='courses.Room'),
        ),
        migrations.AlterField(
            model_name='offering',
            name='active',
            field=models.BooleanField(default=False, help_text='Defines if clients can subscribe to courses in this offering.'),
        ),
        migrations.AlterField(
            model_name='offering',
            name='display',
            field=models.BooleanField(default=False, help_text='Defines if the courses in this offering should be displayed on the Website.'),
        ),
        migrations.AlterField(
            model_name='offering',
            name='type',
            field=models.CharField(choices=[('reg', 'Regular (weekly)'), ('irr', 'Irregular (Workshops)')], default='reg', help_text='The type of the offering influences how the offering is displayed.', max_length=3),
        ),
        migrations.AlterField(
            model_name='regularlesson',
            name='weekday',
            field=models.CharField(choices=[('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday'), ('sun', 'Sunday')], default=None, max_length=3),
        ),
        migrations.AlterField(
            model_name='rejection',
            name='date',
            field=models.DateField(auto_now_add=True, help_text='The date when the rejection mail was sent to the subscriber.'),
        ),
        migrations.AlterField(
            model_name='rejection',
            name='mail_sent',
            field=models.BooleanField(default=True, help_text='If this rejection was communicated to user by email.'),
        ),
        migrations.AlterField(
            model_name='rejection',
            name='reason',
            field=models.CharField(choices=[('unknown', 'Unknown'), ('overbooked', 'Overbooked'), ('no_partner', 'No partner found'), ('user_cancelled', 'User cancelled the subscription'), ('illegitimate', 'Users subscription is illegitimate'), ('banned', 'User is banned'), ('course_cancelled', 'Course was cancelled')], default='unknown', max_length=30),
        ),
        migrations.AlterField(
            model_name='room',
            name='url',
            field=models.URLField(blank=True, help_text='The url to Google Maps (see https://support.google.com/maps/answer/144361?p=newmaps_shorturl&rd=1)', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='song',
            name='speed',
            field=models.IntegerField(blank=True, help_text='The speed of the song in TPM', null=True),
        ),
        migrations.AlterField(
            model_name='song',
            name='url_video',
            field=models.URLField(blank=True, help_text='A url to a demo video (e.g Youtube).', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='style',
            name='url_info',
            field=models.URLField(blank=True, help_text='A url to an information page (e.g. Wikipedia).', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='style',
            name='url_playlist',
            field=models.URLField(blank=True, help_text='A url to a playlist (e.g on online-Spotify, Youtube).', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='style',
            name='url_video',
            field=models.URLField(blank=True, help_text='A url to a demo video (e.g Youtube).', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='subscribe',
            name='comment',
            field=models.TextField(blank=True, help_text='A optional comment made by the user during subscription.', null=True),
        ),
        migrations.AlterField(
            model_name='subscribe',
            name='date',
            field=models.DateTimeField(auto_now_add=True, help_text='The date/time when the subscription was made.'),
        ),
        migrations.AlterField(
            model_name='subscribe',
            name='matching_state',
            field=models.CharField(choices=[('unknown', 'Unknown'), ('couple', 'Couple'), ('to_match', 'To match'), ('to_rematch', 'To rematch'), ('matched', 'Matched'), ('not_required', 'Not required')], default='unknown', max_length=30),
        ),
        migrations.AlterField(
            model_name='subscribe',
            name='paymentmethod',
            field=models.CharField(blank=True, choices=[('counter', 'counter'), ('course', 'course'), ('online', 'online'), ('voucher', 'voucher')], max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='subscribe',
            name='state',
            field=models.CharField(choices=[('new', 'new'), ('confirmed', 'confirmed (to pay)'), ('payed', 'payed'), ('completed', 'completed'), ('rejected', 'rejected'), ('to_reimburse', 'to reimburse')], default='new', max_length=30),
        ),
        migrations.AlterField(
            model_name='subscribe',
            name='usi',
            field=models.CharField(blank=True, default='------', help_text='Unique subscription identifier: 4 characters identifier, 2 characters checksum', max_length=6, unique=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='body_height',
            field=models.IntegerField(blank=True, help_text="The user's body height in cm.", null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='gender',
            field=models.CharField(choices=[('m', 'Men'), ('w', 'Woman')], default=None, max_length=1, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='get_involved',
            field=models.BooleanField(default=False, help_text='If this user is interested to get involved with our organisation.'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='language',
            field=models.CharField(choices=[('de', 'Deutsch'), ('en', 'English')], default='de', help_text='Default language.', max_length=5, verbose_name='language'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='privacy',
            field=models.CharField(choices=[('open', 'Open'), ('registered', 'Registered'), ('closed', 'Closed')], default='registered', help_text='Designates who can view your profile.', max_length=15, verbose_name='privacy'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='student_status',
            field=models.CharField(choices=[('eth', 'ETH'), ('uni', 'Uni'), ('ph', 'PH'), ('other', 'Other'), ('no', 'Not a student')], default='no', max_length=10),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(help_text='The user which is matched to this user profile.', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='voucher',
            name='pdf_file',
            field=models.FileField(blank=True, null=True, upload_to='/voucher/'),
        ),
    ]
