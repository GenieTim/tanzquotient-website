# Generated by Django 4.0.8 on 2023-01-06 19:23

import courses.models.user_profile
import courses.models.voucher
from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import utils.code_generator


def migrate_title(apps, schema_editor) -> None:
    model = apps.get_model("courses", "CourseType")
    model_translation = apps.get_model("courses", "CourseTypeTranslation")

    for course_type_instance in model.objects.all():
        for translation in model_translation.objects.filter(
            master_id=course_type_instance.pk
        ).all():
            translation.title = course_type_instance.name
            translation.save()


class Migration(migrations.Migration):
    replaces = [
        ("courses", "0002_auto_20200215_1336"),
        ("courses", "0003_auto_20200219_1613"),
        ("courses", "0004_auto_20200227_1031"),
        ("courses", "0005_auto_20200331_1936"),
        ("courses", "0006_auto_20200401_1236"),
        ("courses", "0007_auto_20200413_1829"),
        ("courses", "0008_userprofile_language"),
        ("courses", "0009_auto_20200426_1526"),
        ("courses", "0010_added_sql_views"),
        ("courses", "0011_modified_sql_views"),
        ("courses", "0012_auto_20211027_1712"),
        ("courses", "0013_alter_userprofile_picture"),
        ("courses", "0014_auto_20220403_1300"),
        ("courses", "0015_auto_20220403_2158"),
        ("courses", "0016_alter_subscribe_usi"),
        ("courses", "0017_auto_20220419_1022"),
        ("courses", "0018_auto_20221027_2227"),
        ("courses", "0019_alter_musicpluginmodel_cmsplugin_ptr"),
        ("courses", "0020_alter_subscribe_paymentmethod"),
    ]

    dependencies = [
        ("partners", "0001_initial"),
        ("cms", "0022_auto_20180620_1551"),
        ("courses", "0001_squashed_0071_offering_preview"),
    ]

    operations = [
        migrations.AlterField(
            model_name="style",
            name="parent_style",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="children",
                to="courses.style",
            ),
        ),
        migrations.AlterModelOptions(
            name="course",
            options={"ordering": ["position", "name"]},
        ),
        migrations.AlterModelOptions(
            name="coursetype",
            options={"ordering": ["name", "level"]},
        ),
        migrations.AlterModelOptions(
            name="room",
            options={"ordering": ["name"]},
        ),
        migrations.DeleteModel(
            name="CurrentCourse",
        ),
        migrations.DeleteModel(
            name="PlannedCourse",
        ),
        migrations.AlterModelOptions(
            name="offering",
            options={"ordering": ["-period__date_from", "name"]},
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="picture",
            field=models.ImageField(
                blank=True, null=True, upload_to="profile_pictures"
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="bank_account",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_profile",
                to="courses.bankaccount",
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="gender",
            field=models.CharField(
                choices=[("m", "male"), ("w", "female")],
                default=None,
                max_length=1,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="language",
            field=models.CharField(default="en", max_length=10),
        ),
        migrations.AddField(
            model_name="course",
            name="partner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="courses",
                to="partners.partner",
            ),
        ),
        migrations.AlterField(
            model_name="offering",
            name="type",
            field=models.CharField(
                choices=[
                    ("reg", "Regular (weekly)"),
                    ("irr", "Irregular (e.g. workshops)"),
                    ("p", "Partner (external)"),
                ],
                default="reg",
                help_text="The type of the offering influences how the offering is displayed.",
                max_length=3,
            ),
        ),
        migrations.AddField(
            model_name="subscribe",
            name="lead_follow",
            field=models.CharField(
                choices=[("l", "lead"), ("f", "follow"), ("n", "no preference")],
                default="n",
                max_length=1,
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="gender",
            field=models.CharField(
                choices=[("m", "male"), ("w", "female"), ("d", "diverse")],
                default=None,
                max_length=1,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="picture",
            field=models.ImageField(
                blank=True, null=True, upload_to=courses.models.user_profile.upload_path
            ),
        ),
        migrations.AddField(
            model_name="voucher",
            name="amount",
            field=models.IntegerField(
                blank=True, help_text="Value of the voucher in CHF.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="voucher",
            name="expires",
            field=models.DateField(
                blank=True,
                help_text="If not set, the voucher will not expire.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="voucher",
            name="key",
            field=models.CharField(
                default=courses.models.voucher.generate_key,
                help_text="Used to redeem voucher.",
                max_length=8,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="voucher",
            name="pdf_file",
            field=models.FileField(
                blank=True,
                help_text="Will be generated.",
                null=True,
                upload_to="voucher/",
            ),
        ),
        migrations.AlterField(
            model_name="voucher",
            name="percentage",
            field=models.IntegerField(
                blank=True, help_text="Reduction in percent (0-100).", null=True
            ),
        ),
        migrations.AlterField(
            model_name="voucher",
            name="subscription",
            field=models.ForeignKey(
                blank=True,
                help_text="The voucher was applied for this subscription.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="courses.subscribe",
            ),
        ),
        migrations.AddConstraint(
            model_name="voucher",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("percentage__isnull", True),
                    models.Q(("percentage__gte", 0), ("percentage__lte", 100)),
                    _connector="OR",
                ),
                name="percentage is null or between 0 and 100",
            ),
        ),
        migrations.AddConstraint(
            model_name="voucher",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("amount__isnull", True), ("amount__gte", 0), _connector="OR"
                ),
                name="amount is null or non-negative",
            ),
        ),
        migrations.AddConstraint(
            model_name="voucher",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("amount__isnull", False),
                        ("amount__gt", 0),
                        models.Q(
                            ("percentage__isnull", True),
                            ("percentage", 0),
                            _connector="OR",
                        ),
                    ),
                    models.Q(
                        ("percentage__isnull", False),
                        ("percentage__gt", 0),
                        models.Q(
                            ("amount__isnull", True), ("amount", 0), _connector="OR"
                        ),
                    ),
                    _connector="OR",
                ),
                name="either amount or percentage set (not both",
            ),
        ),
        migrations.AlterField(
            model_name="subscribe",
            name="paymentmethod",
            field=models.CharField(
                blank=True,
                choices=[
                    ("counter", "counter"),
                    ("course", "course"),
                    ("online", "online"),
                    ("voucher", "voucher"),
                    ("reduction", "price reduction"),
                ],
                max_length=30,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="price_with_legi",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=Decimal("35"),
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="course",
            name="price_without_legi",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=Decimal("70"),
                max_digits=6,
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="PriceReduction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=6)),
                ("comment", models.CharField(blank=True, max_length=128, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_reductions",
                        to="courses.subscribe",
                    ),
                ),
                (
                    "used_voucher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="price_reductions",
                        to="courses.voucher",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AlterField(
            model_name="subscribe",
            name="price_to_pay",
            field=models.DecimalField(
                blank=True, decimal_places=2, default=None, max_digits=6, null=True
            ),
        ),
        migrations.AlterField(
            model_name="teach",
            name="hourly_wage",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Hourly wage, leave empty to copy default wage from teacher profile.",
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="teachlesson",
            name="hourly_wage",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Hourly wage, leave empty to copy default wage from teacher profile.",
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="default_hourly_wage",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("30"),
                help_text="The default hourly wage, which serves as a preset value for taught courses. ",
                max_digits=6,
            ),
        ),
        migrations.AlterField(
            model_name="subscribe",
            name="usi",
            field=models.CharField(
                blank=True,
                default=utils.code_generator.CodeGenerator.short_uuid_without_ambiguous_characters,
                help_text="Unique subscription identifier: Randomly generated",
                max_length=6,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="subscribe",
            name="state",
            field=models.CharField(
                choices=[
                    ("new", "new"),
                    ("confirmed", "confirmed (to pay)"),
                    ("payed", "paid"),
                    ("completed", "completed"),
                    ("rejected", "rejected"),
                    ("to_reimburse", "to reimburse"),
                ],
                db_index=True,
                default="new",
                max_length=30,
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="gender",
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.RunSQL(
            sql="UPDATE courses_userprofile SET gender = 'man' WHERE gender = 'm'",
        ),
        migrations.RunSQL(
            sql="UPDATE courses_userprofile SET gender = 'woman' WHERE gender = 'w'",
        ),
        migrations.AlterModelOptions(
            name="coursetype",
            options={},
        ),
        migrations.AddField(
            model_name="coursetypetranslation",
            name="subtitle",
            field=models.CharField(
                blank=True,
                help_text="A short teaser, that is displayed below the title for more information.",
                max_length=128,
                null=True,
                verbose_name="[TR] Subtitle",
            ),
        ),
        migrations.AddField(
            model_name="coursetypetranslation",
            name="title",
            field=models.CharField(
                default="",
                help_text="This will be the title shown for all courses of this type.",
                max_length=64,
                verbose_name="[TR] Title",
            ),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=migrate_title,
        ),
        migrations.RemoveField(
            model_name="coursetype",
            name="name",
        ),
        migrations.AlterField(
            model_name="musicpluginmodel",
            name="cmsplugin_ptr",
            field=models.OneToOneField(
                auto_created=True,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                related_name="%(app_label)s_%(class)s",
                serialize=False,
                to="cms.cmsplugin",
            ),
        ),
        migrations.AlterField(
            model_name="subscribe",
            name="paymentmethod",
            field=models.CharField(
                blank=True,
                choices=[
                    ("counter", "counter"),
                    ("course", "course"),
                    ("online", "online"),
                    ("voucher", "voucher"),
                    ("reduction", "price reduction"),
                    ("manual", "manual"),
                ],
                max_length=30,
                null=True,
            ),
        ),
        migrations.RunSQL(
            sql="CREATE VIEW courses_with_period AS SELECT course.*, period.date_from, period.date_to FROM courses_course course LEFT JOIN courses_offering offering ON course.offering_id = offering.id LEFT JOIN courses_period period ON    (course.period_id IS NOT NULL AND period.id = course.period_id)    OR (course.period_id IS NULL AND course.offering_id IS NOT NULL AND offering.period_id = period.id)",
        ),
        migrations.RunSQL(
            sql="CREATE VIEW past_courses AS SELECT * FROM courses_with_period WHERE date_to < now()",
        ),
        migrations.RunSQL(
            sql="CREATE VIEW current_courses AS SELECT * FROM courses_with_period WHERE date_from <= now() AND date_to >= now()",
        ),
        migrations.RunSQL(
            sql="CREATE VIEW current_user_courses AS SELECT courses.*, subscription.user_id FROM current_courses as courses JOIN courses_subscribe subscription on subscription.course_id = courses.id",
        ),
        migrations.RunSQL(
            sql="CREATE VIEW past_courses_users AS SELECT courses.*, subscription.user_id FROM past_courses as courses JOIN courses_subscribe subscription on subscription.course_id = courses.id",
        ),
        migrations.RunSQL(
            sql="CREATE OR REPLACE VIEW current_courses AS SELECT * FROM courses_with_period WHERE date_to >= now()",
        ),
    ]
