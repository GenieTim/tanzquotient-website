version: '2'
services:

  # Database (MySQL)
  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: ${TQ_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: tq_website
    volumes:
      - "../data-mysql:/var/lib/mysql"
    ports:
      - "${TQ_DB_PORT}:3306"
    restart: always

  # Database
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${TQ_DB_USER}
      POSTGRES_PASSWORD: ${TQ_DB_PASSWORD}
      POSTGRES_DB: tq_website
    ports:
      - 5432:5432
    restart: always

  # Django (serving with gunicorn)
  django:
    build:
      context: .
      dockerfile: configurations/dockerfile-new
    image: tq_website_django # give this built image a name to use it below
    env_file:
      - .env
    user: root
    volumes:
      - .:/webapps/tq_website
    command: gunicorn -c /webapps/tq_website/configurations/gunicorn.py --chdir /webapps/tq_website tq_website.wsgi:application --reload
    links:
      - db
      - redis
    restart: always

  # Webserver
  nginx:
    image: nginx:mainline-alpine
    volumes:
      - ./configurations/nginx-ssl.conf:/etc/nginx/conf.d/tq_website.template
      - ./collected_static:/webapps/tq_website/collected_static
      - ./media:/webapps/tq_website/media
      - ./maintenance.conf:/webapps/tq_website/maintenance.conf
      - /etc/letsencrypt:/etc/letsencrypt
    command: nginx -g 'daemon off;' -c '/etc/nginx/conf.d/tq_website.template'
    environment:
      - NGINX_HOST=${TQ_NGINX_HOST}
      - NGINX_PORT=${TQ_NGINX_PORT}
    ports:
      - "${TQ_NGINX_PORT}:80"
      - "${TQ_SSL_PORT}:443"
    links:
      - django
    restart: always

  # Cache and message broker for celery (handles background tasks)
  redis:
    image: redis:3.2-alpine
    restart: always

  # Celery Beat
  beat:
    depends_on:
      - django # ensure the image is built before running this container
    image: tq_website_django
    env_file:
      - .env
    working_dir: /webapps/tq_website
    volumes:
      - .:/webapps/tq_website
    command: celery -A tq_website beat -l info --pidfile="/tmp/celerybeat.pid" -S django
    links:
      - db
      - redis
    restart: always

  worker:
    depends_on:
      - django # ensure the image is built before running this container
    image: tq_website_django
    env_file:
      - .env
    working_dir: /webapps/tq_website
    environment:
      C_FORCE_ROOT: 1
    volumes:
      - .:/webapps/tq_website
    command: celery -A tq_website worker -l info
    links:
      - db
      - redis
    restart: always